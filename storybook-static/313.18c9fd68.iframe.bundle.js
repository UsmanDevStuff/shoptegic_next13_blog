/*! For license information please see 313.18c9fd68.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunknext_blog=self.webpackChunknext_blog||[]).push([[313],{"./node_modules/@babel/runtime/helpers/esm/defineProperty.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__.d(__webpack_exports__,{Z:()=>_defineProperty})},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var e=__webpack_require__("./node_modules/react/index.js");var k="function"==typeof Object.is?Object.is:function h(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b},l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}var u="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function t(a,b){return b()}:function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];return n((function(){c.value=d,c.getSnapshot=b,r(c)&&g({inst:c})}),[a,d,b]),m((function(){return r(c)&&g({inst:c}),a((function(){r(c)&&g({inst:c})}))}),[a]),p(d),d};exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var h=__webpack_require__("./node_modules/react/index.js"),n=__webpack_require__("./node_modules/use-sync-external-store/shim/index.js");var q="function"==typeof Object.is?Object.is:function p(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b},r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;exports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v((function(){function a(a){if(!c){if(c=!0,d=a,a=l(a),void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}if(b=k,q(d,a))return b;var e=l(a);return void 0!==g&&g(b,e)?b:(d=a,k=e)}var d,k,c=!1,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]}),[b,e,l,g]);var d=r(a,c[0],c[1]);return u((function(){f.hasValue=!0,f.value=d}),[d]),w(d),d}},"./node_modules/use-sync-external-store/shim/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js")},"./node_modules/use-sync-external-store/shim/with-selector.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js")},"./node_modules/zustand/esm/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ue:()=>create});var console=__webpack_require__("./node_modules/console-browserify/index.js");const createStoreImpl=createState=>{let state;const listeners=new Set,setState=(partial,replace)=>{const nextState="function"==typeof partial?partial(state):partial;if(!Object.is(nextState,state)){const previousState=state;state=(null!=replace?replace:"object"!=typeof nextState)?nextState:Object.assign({},state,nextState),listeners.forEach((listener=>listener(state,previousState)))}},getState=()=>state,api={setState,getState,subscribe:listener=>(listeners.add(listener),()=>listeners.delete(listener)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),listeners.clear()}};return state=createState(setState,getState,api),api},createStore=createState=>createState?createStoreImpl(createState):createStoreImpl;var react=__webpack_require__("./node_modules/react/index.js"),with_selector=__webpack_require__("./node_modules/use-sync-external-store/shim/with-selector.js"),esm_console=__webpack_require__("./node_modules/console-browserify/index.js");const{useSyncExternalStoreWithSelector}=with_selector;const createImpl=createState=>{"function"!=typeof createState&&esm_console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const api="function"==typeof createState?createStore(createState):createState,useBoundStore=(selector,equalityFn)=>function useStore(api,selector=api.getState,equalityFn){const slice=useSyncExternalStoreWithSelector(api.subscribe,api.getState,api.getServerState||api.getState,selector,equalityFn);return(0,react.useDebugValue)(slice),slice}(api,selector,equalityFn);return Object.assign(useBoundStore,api),useBoundStore},create=createState=>createState?createImpl(createState):createImpl},"./node_modules/zustand/esm/middleware.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{mW:()=>devtools});var console=__webpack_require__("./node_modules/console-browserify/index.js");const trackedConnections=new Map,getTrackedConnectionState=name=>{const api=trackedConnections.get(name);return api?Object.fromEntries(Object.entries(api.stores).map((([key,api2])=>[key,api2.getState()]))):{}},devtools=(fn,devtoolsOptions={})=>(set,get,api)=>{const{enabled,anonymousActionType,store,...options}=devtoolsOptions;let extensionConnector;try{extensionConnector=(null==enabled||enabled)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(e){}if(!extensionConnector)return enabled&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),fn(set,get,api);const{connection,...connectionInformation}=((store,extensionConnector,options)=>{if(void 0===store)return{type:"untracked",connection:extensionConnector.connect(options)};const existingConnection=trackedConnections.get(options.name);if(existingConnection)return{type:"tracked",store,...existingConnection};const newConnection={connection:extensionConnector.connect(options),stores:{}};return trackedConnections.set(options.name,newConnection),{type:"tracked",store,...newConnection}})(store,extensionConnector,options);let isRecording=!0;api.setState=(state,replace,nameOrAction)=>{const r=set(state,replace);if(!isRecording)return r;const action=void 0===nameOrAction?{type:anonymousActionType||"anonymous"}:"string"==typeof nameOrAction?{type:nameOrAction}:nameOrAction;return void 0===store?(null==connection||connection.send(action,get()),r):(null==connection||connection.send({...action,type:`${store}/${action.type}`},{...getTrackedConnectionState(options.name),[store]:api.getState()}),r)};const setStateFromDevtools=(...a)=>{const originalIsRecording=isRecording;isRecording=!1,set(...a),isRecording=originalIsRecording},initialState=fn(api.setState,get,api);if("untracked"===connectionInformation.type?null==connection||connection.init(initialState):(connectionInformation.stores[connectionInformation.store]=api,null==connection||connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map((([key,store2])=>[key,key===connectionInformation.store?initialState:store2.getState()]))))),api.dispatchFromDevtools&&"function"==typeof api.dispatch){let didWarnAboutReservedActionType=!1;const originalDispatch=api.dispatch;api.dispatch=(...a)=>{"__setState"!==a[0].type||didWarnAboutReservedActionType||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),didWarnAboutReservedActionType=!0),originalDispatch(...a)}}return connection.subscribe((message=>{var _a;switch(message.type){case"ACTION":return"string"!=typeof message.payload?void console.error("[zustand devtools middleware] Unsupported action format"):parseJsonThen(message.payload,(action=>{if("__setState"!==action.type)api.dispatchFromDevtools&&"function"==typeof api.dispatch&&api.dispatch(action);else{if(void 0===store)return void setStateFromDevtools(action.state);1!==Object.keys(action.state).length&&console.error('\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using \'store\' option in devtools(), the \'state\' should have only one key, which is a value of \'store\' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }\n                    ');const stateFromDevtools=action.state[store];if(null==stateFromDevtools)return;JSON.stringify(api.getState())!==JSON.stringify(stateFromDevtools)&&setStateFromDevtools(stateFromDevtools)}}));case"DISPATCH":switch(message.payload.type){case"RESET":return setStateFromDevtools(initialState),void 0===store?null==connection?void 0:connection.init(api.getState()):null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case"COMMIT":return void 0===store?void(null==connection||connection.init(api.getState())):null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case"ROLLBACK":return parseJsonThen(message.state,(state=>{if(void 0===store)return setStateFromDevtools(state),void(null==connection||connection.init(api.getState()));setStateFromDevtools(state[store]),null==connection||connection.init(getTrackedConnectionState(options.name))}));case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return parseJsonThen(message.state,(state=>{void 0!==store?JSON.stringify(api.getState())!==JSON.stringify(state[store])&&setStateFromDevtools(state[store]):setStateFromDevtools(state)}));case"IMPORT_STATE":{const{nextLiftedState}=message.payload,lastComputedState=null==(_a=nextLiftedState.computedStates.slice(-1)[0])?void 0:_a.state;if(!lastComputedState)return;return setStateFromDevtools(void 0===store?lastComputedState:lastComputedState[store]),void(null==connection||connection.send(null,nextLiftedState))}case"PAUSE_RECORDING":return isRecording=!isRecording}return}})),initialState},parseJsonThen=(stringified,f)=>{let parsed;try{parsed=JSON.parse(stringified)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",e)}void 0!==parsed&&f(parsed)}}}]);